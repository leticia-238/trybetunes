{"version":3,"sources":["services/userAPI.js","components/LoadingMessage/LoadingMessage.js","assets/LogoTrybeTunes.svg","pages/Login/Login.js","assets/LogoHeader.svg","assets/user-icon.png","components/Header/Header.js","services/searchAlbumsAPI.js","components/AlbumCard/AlbumCard.js","components/AlbumList.js","pages/Search/Search.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile/Profile.js","pages/ProfileEdit/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","LoadingMessage","className","React","Component","Login","isMount","handleInput","target","setState","value","saveUserOnClick","loginName","a","saveUserIsloading","saveUserIsFinished","state","this","rest","props","to","basePath","src","LogoTrybeTunes","alt","type","id","onChange","placeholder","disabled","length","onClick","Header","then","LogoHeader","UserIcon","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","AlbumCard","defaultProps","AlbumList","albumData","Search","searchArtist","searchArtistIsLoading","saveArtistName","searchArtistIsFinished","getMusics","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","checkFavoriteSong","checked","favoriteSong","addSongIsLoading","trackName","previewUrl","removeFromFavorites","includes","controls","kind","htmlFor","Album","songsList","songData","Favorites","favoriteSongsList","isLoading","key","parseInt","Profile","userName","ProfileEdit","handleChange","handleClick","updatedUser","editFinished","validForm","trim","test","NotFound","App","exact","path","render","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eb3f8bb.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport './Loading.css'\n\nclass LoadingMessage extends React.Component {\n  render() {\n    return (<p className=\"loading\">Carregando...</p>);\n  }\n}\n\nexport default LoadingMessage;\n","export default __webpack_public_path__ + \"static/media/LogoTrybeTunes.396d23d3.svg\";","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport { createUser } from '../../services/userAPI';\nimport LoadingMessage from '../../components/LoadingMessage/LoadingMessage';\nimport LogoTrybeTunes from '../../assets/LogoTrybeTunes.svg';\nimport { basePath } from '../../App';\nimport './Login.css'\n\nclass Login extends React.Component {\n  isMount = false;\n\n  constructor() {\n    super();\n    this.state = {\n      loginName: '',\n      saveUserIsloading: false,\n      saveUserIsFinished: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleInput = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  saveUserOnClick = async (loginName) => {\n    this.setState({ saveUserIsloading: true });\n    const response = await createUser({ name: loginName });\n    if (this.isMount) {\n      this.setState({ saveUserIsFinished: response === 'OK' });\n    }\n  }\n\n  render() {\n    const { loginName, saveUserIsloading, saveUserIsFinished } = this.state;\n    const { ...rest } = this.props;\n    const minNumOfChars = 3;\n\n    return (\n      <Route {...rest}>\n        {saveUserIsFinished\n          ? <Redirect to={`${basePath}/search`} />\n          : (\n            <div data-testid=\"page-login\" className=\"page-login\">\n              <img src={LogoTrybeTunes} alt=\"Logo TrybeTunes\" className=\"logo\" />\n              {saveUserIsloading\n                ? <LoadingMessage />\n                : (\n                  <form className=\"form-box\">\n                    <input\n                      type=\"text\"\n                      data-testid=\"login-name-input\"\n                      id=\"login-name-input\"\n                      name=\"loginName\"\n                      value={loginName}\n                      onChange={this.handleInput}\n                      placeholder=\"Nome de usuário\"\n                      className=\"input-field\"\n                    />\n                    <button\n                      type=\"button\"\n                      data-testid=\"login-submit-button\"\n                      disabled={loginName.length < minNumOfChars}\n                      onClick={() => this.saveUserOnClick(loginName)}\n                      className=\"btn\"\n                    >\n                      Entrar\n                    </button>\n                  </form>)}\n            </div>)}\n      </Route>\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/LogoHeader.ee1ea554.svg\";","export default __webpack_public_path__ + \"static/media/user-icon.ef664ff5.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../../services/userAPI';\nimport LoadingMessage from '../LoadingMessage/LoadingMessage';\nimport LogoHeader from '../../assets/LogoHeader.svg';\nimport { basePath } from '../../App';\nimport './Header.css'\nimport UserIcon from '../../assets/user-icon.png'\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: false,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((user) => {\n      this.setState({ user });\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div>\n        {user\n          ? (\n            <>\n              <header data-testid=\"header-component\" className=\"header\">\n                <img\n                  src={ LogoHeader }\n                  alt=\"Logo TrybeTunes\"\n                  className=\"logo-header\"\n                />\n                <div className=\"user-box-header\">\n                  <div className=\"header-user-image\">\n                    <img src={ user.image ? user.image : UserIcon } alt=\"Imagem do usuário\" />\n                  </div>\n                  <p\n                    data-testid=\"header-user-name\"\n                    className=\"header-user-name\"\n                  >\n                    { user.name }\n\n                  </p>\n                </div>\n              </header>\n              <nav className=\"nav-bar\">\n                <Link\n                  to={`${ basePath }/search`}\n                  data-testid=\"link-to-search\"\n                  className=\"nav-link\"\n                >\n                  Pesquisa\n                </Link>\n                <Link\n                  to={`${ basePath }/favorites`}\n                  data-testid=\"link-to-favorites\"\n                  className=\"nav-link\"\n                >\n                  Favoritas\n                </Link>\n                <Link\n                  to={`${ basePath }/profile`}\n                  data-testid=\"link-to-profile\"\n                  className=\"nav-link\"\n                >\n                  Perfil\n                </Link>\n              </nav>\n            </>\n          )\n          : <LoadingMessage />}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AlbumCard.css'\n\nclass AlbumCard extends React.Component {\n  render() {\n    const { artistName, collectionName, artworkUrl100 } = this.props;\n    return (\n      <div className='album-card'>\n        <img\n          src={artworkUrl100} \n          alt={collectionName} \n          className=\"album-image\" \n        />\n        <div className='album-info'>\n          <h3 data-testid=\"album-name\" className='album-name'>\n            {collectionName}\n          </h3>\n          <p data-testid=\"artist-name\" className='artist-name'>\n            {artistName}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  artistName: PropTypes.string.isRequired,\n  collectionName: PropTypes.string.isRequired,\n  artworkUrl100: PropTypes.string,\n};\n\nAlbumCard.defaultProps = {\n  artworkUrl100: '',\n};\nexport default AlbumCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AlbumCard from './AlbumCard/AlbumCard';\nimport { basePath } from '../App'\n\nclass AlbumList extends React.Component {\n  render() {\n    const { albumData } = this.props;\n\n    return (\n      <div className='container'>\n        {albumData.length > 0\n          ? (\n            albumData.map(({ collectionId, ...rest }) => (\n              <Link\n                to={`${basePath}/album/${collectionId}`}\n                data-testid={`link-to-album-${collectionId}`}\n                key={collectionId}\n              >\n                <AlbumCard {...rest} />\n              </Link>\n            ))\n          )\n          : <span>Nenhum álbum foi encontrado</span>}\n      </div>\n    );\n  }\n}\n\nAlbumList.propTypes = {\n  albumData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default AlbumList;\n","import React from 'react';\nimport Header from '../../components/Header/Header';\nimport searchAlbumsAPI from '../../services/searchAlbumsAPI';\nimport LoadingMessage from '../../components/LoadingMessage/LoadingMessage';\nimport AlbumList from '../../components/AlbumList';\nimport './Search.css'\n\nclass Search extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      searchArtistIsLoading: false,\n      searchArtistIsFinished: false,\n      albumData: [],\n      saveArtistName: '',\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleInput = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  searchArtist = async (artist) => {\n    this.setState({\n      artistName: '',\n      searchArtistIsLoading: true,\n      saveArtistName: artist });\n    const response = await searchAlbumsAPI(artist);\n    if (this.isMount) {\n      this.setState({\n        searchArtistIsLoading: false,\n        searchArtistIsFinished: true,\n        albumData: response,\n      });\n    }\n  }\n\n  render() {\n    const { artistName, searchArtistIsLoading, searchArtistIsFinished,\n      albumData, saveArtistName } = this.state;\n    const minNumOfChars = 2;\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        { searchArtistIsLoading\n          ? <LoadingMessage />\n          : (\n            <>\n              <form className=\"search-box\">\n                <input\n                  type=\"text\"\n                  data-testid=\"search-artist-input\"\n                  id=\"search-artist-input\"\n                  name=\"artistName\"\n                  value={ artistName }\n                  onChange={ this.handleInput }\n                  placeholder=\"Nome do Artista\"\n                  className=\"input-field\"\n                />\n                <button\n                  type=\"button\"\n                  data-testid=\"search-artist-button\"\n                  onClick={ () => this.searchArtist(artistName) }\n                  disabled={ artistName.length < minNumOfChars }\n                  className=\"btn\"\n                >\n                  Pesquisar\n                </button>\n              </form>\n              { searchArtistIsFinished\n                ? (\n                  <>\n                    <p>\n                      { `Resultado de álbuns de: ${saveArtistName}` }\n                    </p>\n                    <AlbumList albumData={ albumData } />\n                  </>\n                )\n                : ''}\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport LoadingMessage from '../LoadingMessage/LoadingMessage';\nimport './MusicCard.css'\n\nclass MusicCard extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      favoriteSong: false,\n      addSongIsLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    const { trackId } = this.props;\n    getFavoriteSongs().then((response) => {\n      if (this.isMount) {\n        this.setState({\n          favoriteSong: response.map((song) => song.trackId).includes(trackId),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  checkFavoriteSong = async ({ target: { checked } }) => {\n    this.setState({ favoriteSong: checked, addSongIsLoading: true });\n    const { trackName, previewUrl, trackId, removeFromFavorites } = this.props;\n    if (checked) {\n      await addSong({ trackName, previewUrl, trackId });\n    } else {\n      await removeSong({ trackName, previewUrl, trackId });\n      removeFromFavorites(trackId);\n    }\n    if (this.isMount) {\n      this.setState({ addSongIsLoading: false });\n    }\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { favoriteSong, addSongIsLoading } = this.state;\n    return (\n      <div>\n        {addSongIsLoading\n          ? <LoadingMessage />\n          : (\n            <div className='music-card'>\n              <h3 className='music-name'>{trackName}</h3>\n              <audio data-testid=\"audio-component\" src={previewUrl} controls>\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                <code>audio</code>\n                .\n              </audio>\n              <label\n                className='label-favorite'\n                htmlFor={`checkbox-music-${trackId}`}\n              >\n                <span>Favorita</span>\n                <input\n                  type=\"checkbox\"\n                  id={`checkbox-music-${trackId}`}\n                  data-testid={`checkbox-music-${trackId}`}\n                  checked={favoriteSong}\n                  onChange={this.checkFavoriteSong}\n                  className=\"checkbox-favorite\"\n                />\n              </label>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  removeFromFavorites: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\nimport getMusics from '../services/musicsAPI';\nimport AlbumCard from '../components/AlbumCard/AlbumCard';\nimport MusicCard from '../components/MusicCard/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      songsList: [],\n      artistName: '',\n      collectionName: '',\n      artworkUrl100: '',\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    getMusics(id).then((response) => {\n      this.setState({\n        songsList: response.filter(({ kind }) => kind === 'song'),\n        artistName: response[0].artistName,\n        collectionName: response[0].collectionName,\n        artworkUrl100: response[0].artworkUrl100,\n      });\n    });\n  }\n\n  render() {\n    const { songsList, ...albumData } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <AlbumCard {...albumData} />\n        <div className='container'>\n          {\n            songsList.map(({ trackId, ...songData }) => (\n              <MusicCard\n                key={trackId}\n                {...songData}\n                trackId={trackId}\n                removeFromFavorites={() => { }}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header/Header';\nimport MusicCard from '../components/MusicCard/MusicCard';\nimport LoadingMessage from '../components/LoadingMessage/LoadingMessage';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      favoriteSongsList: [],\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    this.setState({ isLoading: true });\n    getFavoriteSongs().then((songsList) => {\n      if (this.isMount) {\n        this.setState({ favoriteSongsList: songsList, isLoading: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  removeFromFavorites = (trackId) => {\n    this.setState(({ favoriteSongsList }) => {\n      const newList = favoriteSongsList.filter((song) => song.trackId !== trackId);\n      return { favoriteSongsList: newList };\n    });\n  }\n\n  render() {\n    const { favoriteSongsList, isLoading } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        { isLoading\n          ? <LoadingMessage />\n          : <div className='container'>\n            {\n              favoriteSongsList.map(({ trackId, ...songData }) => (\n                <MusicCard\n                  { ...songData }\n                  key={ trackId }\n                  trackId={ parseInt(trackId, 10) }\n                  removeFromFavorites={ this.removeFromFavorites }\n                />\n              ))\n            }\n          </div> \n        }\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { basePath } from '../../App';\nimport Header from '../../components/Header/Header';\nimport LoadingMessage from '../../components/LoadingMessage/LoadingMessage';\nimport { getUser } from '../../services/userAPI';\nimport './Profile.css'\nimport UserIcon from '../../assets/user-icon.png'\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(({ name, email, image, description }) => {\n      this.setState(\n        { userName: name, email, image, description, isLoading: false },\n      );\n    });\n  }\n\n  render() {\n    const { isLoading, userName, email, image, description } = this.state;\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {isLoading\n          ? <LoadingMessage />\n          : (\n            <div className='page-profile'>\n              <img \n                className=\"profile-image\" \n                src={ image ? image : UserIcon } \n                alt=\"Imagem do usuário\" \n              />\n              <h2 className='user-name'>{ userName }</h2>\n              <p className='user-email'>{ email }</p>\n              <p className='user-description'>{ description }</p>\n              <Link to={`${ basePath }/profile/edit`} className=\"btn\">\n                Editar perfil\n              </Link>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { basePath } from '../../App';\nimport Header from '../../components/Header/Header';\nimport LoadingMessage from '../../components/LoadingMessage/LoadingMessage';\nimport { getUser, updateUser } from '../../services/userAPI';\nimport './ProfileEdit.css'\n\nclass ProfileEdit extends React.Component {\n  isMount = false;\n\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      editFinished: false,\n      userName: '',\n      email: '',\n      image: '',\n      description: '',\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    getUser().then(({ name, email, image, description }) => {\n      this.setState(\n        { userName: name, email, image, description, isLoading: false },\n      );\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleClick = () => {\n    const { userName, email, image, description } = this.state;\n    this.setState({ isLoading: true });\n    updateUser({ name: userName, email, image, description })\n      .then(() => {\n        if (this.isMount) {\n          this.setState({ isLoading: false, editFinished: true });\n        }\n      });\n  }\n\n  validForm = () => {\n    const { userName, email, image, description } = this.state;\n    const regexForEmail = /\\S+@\\S+\\.com/;\n    return userName.trim().length > 0 && image.trim().length > 0\n      && description.trim().length > 0 && regexForEmail.test(email);\n  }\n\n  render() {\n    const { editFinished, isLoading, userName, email, image, description } = this.state;\n    const { ...rest } = this.props;\n    return (\n      <Route {...rest}>\n        {editFinished\n          ? <Redirect to={`${basePath}/profile`} />\n          : (\n            <div data-testid=\"page-profile-edit\">\n              <Header />\n              {isLoading\n                ? <LoadingMessage />\n                : (\n                  <div className=\"page-profile-edit\">\n                    <form className=\"form-box\">\n                      <img\n                        data-testid=\"profile-image\"\n                        src={image}\n                        alt=\"Imagem do usuário\"\n                        className=\"user-image\"\n                      />\n                      <label htmlFor=\"edit-input-name\" className=\"label-box\">\n                        Nome de usuário\n                        <input\n                          type=\"text\"\n                          name=\"userName\"\n                          id=\"edit-input-name\"\n                          data-testid=\"edit-input-name\"\n                          value={userName}\n                          onChange={this.handleChange}\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label htmlFor=\"edit-input-email\" className=\"label-box\">\n                        e-mail\n                        <input\n                          type=\"text\"\n                          name=\"email\"\n                          id=\"edit-input-email\"\n                          data-testid=\"edit-input-email\"\n                          value={email}\n                          onChange={this.handleChange}\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label htmlFor=\"edit-input-image\" className=\"label-box\">\n                        Url da imagem\n                        <input\n                          type=\"text\"\n                          name=\"image\"\n                          id=\"edit-input-image\"\n                          data-testid=\"edit-input-image\"\n                          value={image}\n                          onChange={this.handleChange}\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label\n                        htmlFor=\"edit-input-description\"\n                        className=\"label-box description\"\n                      >\n                        Descrição\n                        <textarea\n                          name=\"description\"\n                          id=\"edit-input-description\"\n                          data-testid=\"edit-input-description\"\n                          onChange={this.handleChange}\n                          className=\"input-field\"\n                          value={description}\n                        />\n                      </label>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-button-save\"\n                        disabled={!this.validForm()}\n                        className=\"btn\"\n                        onClick={this.handleClick}\n                      >\n                        Salvar\n                      </button>\n                    </form>\n                  </div>\n                )}\n            </div>\n          )}\n      </Route>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        Not Found\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport Search from './pages/Search/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile/Profile';\nimport ProfileEdit from './pages/ProfileEdit/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport './styles/index.css';\n\nexport const basePath = \"/trybetunes\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Login exact path={basePath} />\n          <Route exact path={`${basePath}/search`} render={() => <Search />} />\n          <Route\n            path={`${basePath}/album/:id`}\n            render={({ match }) => <Album {...match.params} />}\n          />\n          <Route exact path={`${basePath}/favorites`} render={() => <Favorites />} />\n          <Route exact path={`${basePath}/profile`} render={() => <Profile />} />\n          <ProfileEdit exact path={`${basePath}/profile/edit`} />\n          <Route path=\"*\" render={() => <NotFound />} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}