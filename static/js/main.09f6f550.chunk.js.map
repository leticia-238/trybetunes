{"version":3,"sources":["services/userAPI.js","components/LoadingMessage.js","assets/LogoTrybeTunes.svg","pages/Login.js","assets/LogoHeader.svg","components/Header.js","services/searchAlbumsAPI.js","components/AlbumCard.js","components/AlbumList.js","pages/Search.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","LoadingMessage","className","React","Component","Login","isMount","handleInput","target","setState","value","saveUserOnClick","loginName","a","saveUserIsloading","saveUserIsFinished","state","this","rest","props","to","basePath","src","LogoTrybeTunes","alt","type","id","onChange","placeholder","disabled","length","onClick","Header","then","LogoHeader","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","AlbumCard","defaultProps","AlbumList","albumData","Search","searchArtist","searchArtistIsLoading","saveArtistName","searchArtistIsFinished","getMusics","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","checkFavoriteSong","checked","favoriteSong","addSongIsLoading","trackName","previewUrl","removeFromFavorites","includes","controls","kind","htmlFor","Album","songsList","songData","Favorites","favoriteSongsList","isLoading","key","parseInt","Profile","userName","ProfileEdit","handleChange","handleClick","updatedUser","editFinished","validForm","trim","test","NotFound","App","exact","path","render","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f6f550.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\n\nclass LoadingMessage extends React.Component {\n  render() {\n    return (<p className=\"loading\">Carregando...</p>);\n  }\n}\n\nexport default LoadingMessage;\n","export default __webpack_public_path__ + \"static/media/LogoTrybeTunes.396d23d3.svg\";","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport { createUser } from '../services/userAPI';\nimport LoadingMessage from '../components/LoadingMessage';\nimport LogoTrybeTunes from '../assets/LogoTrybeTunes.svg';\nimport { basePath } from '../App';\n\nclass Login extends React.Component {\n  isMount = false;\n\n  constructor() {\n    super();\n    this.state = {\n      loginName: '',\n      saveUserIsloading: false,\n      saveUserIsFinished: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleInput = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  saveUserOnClick = async (loginName) => {\n    this.setState({ saveUserIsloading: true });\n    const response = await createUser({ name: loginName });\n    if (this.isMount) {\n      this.setState({ saveUserIsFinished: response === 'OK' });\n    }\n  }\n\n  render() {\n    const { loginName, saveUserIsloading, saveUserIsFinished } = this.state;\n    const { ...rest } = this.props;\n    const minNumOfChars = 3;\n\n    return (\n      <Route { ...rest }>\n        {saveUserIsFinished\n          ? <Redirect to={`${ basePath }/search`} />\n          : (\n            <div data-testid=\"page-login\" className=\"page-login\">\n              <img src={ LogoTrybeTunes } alt=\"Logo TrybeTunes\" className=\"logo\" />\n              {saveUserIsloading\n                ? <LoadingMessage />\n                : (\n                  <form className=\"form-box\">\n                    <input\n                      type=\"text\"\n                      data-testid=\"login-name-input\"\n                      id=\"login-name-input\"\n                      name=\"loginName\"\n                      value={ loginName }\n                      onChange={ this.handleInput }\n                      placeholder=\"Nome de usuário\"\n                      className=\"input-field\"\n                    />\n                    <button\n                      type=\"button\"\n                      data-testid=\"login-submit-button\"\n                      disabled={ loginName.length < minNumOfChars }\n                      onClick={ () => this.saveUserOnClick(loginName) }\n                      className=\"btn\"\n                    >\n                      Entrar\n                    </button>\n                  </form>)}\n            </div>)}\n      </Route>\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/LogoHeader.ee1ea554.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport LoadingMessage from './LoadingMessage';\nimport LogoHeader from '../assets/LogoHeader.svg';\nimport { basePath } from '../App';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: false,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((user) => {\n      this.setState({ user });\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div>\n        {user\n          ? (\n            <>\n              <header data-testid=\"header-component\" className=\"header\">\n                <img\n                  src={ LogoHeader }\n                  alt=\"Logo TrybeTunes\"\n                  className=\"logo-header\"\n                />\n                <div className=\"user-box-header\">\n                  <div className=\"header-user-image\" />\n                  <p\n                    data-testid=\"header-user-name\"\n                    className=\"header-user-name\"\n                  >\n                    { user.name }\n\n                  </p>\n                </div>\n              </header>\n              <nav className=\"nav-bar\">\n                <Link\n                  to={`${ basePath }/search`}\n                  data-testid=\"link-to-search\"\n                  className=\"nav-link\"\n                >\n                  Pesquisa\n                </Link>\n                <Link\n                  to={`${ basePath }/favorites`}\n                  data-testid=\"link-to-favorites\"\n                  className=\"nav-link\"\n                >\n                  Favoritas\n                </Link>\n                <Link\n                  to={`${ basePath }/profile`}\n                  data-testid=\"link-to-profile\"\n                  className=\"nav-link\"\n                >\n                  Perfil\n                </Link>\n              </nav>\n            </>\n          )\n          : <LoadingMessage />}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AlbumCard extends React.Component {\n  render() {\n    const { artistName, collectionName, artworkUrl100 } = this.props;\n    return (\n      <div>\n        <img src={ artworkUrl100 } alt={ collectionName } />\n        <h3 data-testid=\"album-name\">{collectionName}</h3>\n        <p data-testid=\"artist-name\">{artistName}</p>\n      </div>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  artistName: PropTypes.string.isRequired,\n  collectionName: PropTypes.string.isRequired,\n  artworkUrl100: PropTypes.string,\n};\n\nAlbumCard.defaultProps = {\n  artworkUrl100: '',\n};\nexport default AlbumCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AlbumCard from './AlbumCard';\nimport { basePath } from '../App'\n\nclass AlbumList extends React.Component {\n  render() {\n    const { albumData } = this.props;\n\n    return (\n      <div>\n        { albumData.length > 0\n          ? (\n            albumData.map(({ collectionId, ...rest }) => (\n              <Link\n                to={ `${ basePath }/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n                key={ collectionId }\n              >\n                <AlbumCard { ...rest } />\n              </Link>\n            ))\n          )\n          : <span>Nenhum álbum foi encontrado</span>}\n      </div>\n    );\n  }\n}\n\nAlbumList.propTypes = {\n  albumData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default AlbumList;\n","import React from 'react';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport LoadingMessage from '../components/LoadingMessage';\nimport AlbumList from '../components/AlbumList';\n\nclass Search extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      searchArtistIsLoading: false,\n      searchArtistIsFinished: false,\n      albumData: [],\n      saveArtistName: '',\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleInput = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  searchArtist = async (artist) => {\n    this.setState({\n      artistName: '',\n      searchArtistIsLoading: true,\n      saveArtistName: artist });\n    const response = await searchAlbumsAPI(artist);\n    if (this.isMount) {\n      this.setState({\n        searchArtistIsLoading: false,\n        searchArtistIsFinished: true,\n        albumData: response,\n      });\n    }\n  }\n\n  render() {\n    const { artistName, searchArtistIsLoading, searchArtistIsFinished,\n      albumData, saveArtistName } = this.state;\n    const minNumOfChars = 2;\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        { searchArtistIsLoading\n          ? <LoadingMessage />\n          : (\n            <>\n              <form className=\"search-box\">\n                <input\n                  type=\"text\"\n                  data-testid=\"search-artist-input\"\n                  id=\"search-artist-input\"\n                  name=\"artistName\"\n                  value={ artistName }\n                  onChange={ this.handleInput }\n                  placeholder=\"Nome do Artista\"\n                  className=\"input-field\"\n                />\n                <button\n                  type=\"button\"\n                  data-testid=\"search-artist-button\"\n                  onClick={ () => this.searchArtist(artistName) }\n                  disabled={ artistName.length < minNumOfChars }\n                  className=\"btn\"\n                >\n                  Pesquisar\n                </button>\n              </form>\n              { searchArtistIsFinished\n                ? (\n                  <>\n                    <p>\n                      { `Resultado de álbuns de: ${saveArtistName}` }\n                    </p>\n                    <AlbumList albumData={ albumData } />\n                  </>\n                )\n                : ''}\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport LoadingMessage from './LoadingMessage';\n\nclass MusicCard extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      favoriteSong: false,\n      addSongIsLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    const { trackId } = this.props;\n    getFavoriteSongs().then((response) => {\n      if (this.isMount) {\n        this.setState({\n          favoriteSong: response.map((song) => song.trackId).includes(trackId),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  checkFavoriteSong = async ({ target: { checked } }) => {\n    this.setState({ favoriteSong: checked, addSongIsLoading: true });\n    const { trackName, previewUrl, trackId, removeFromFavorites } = this.props;\n    if (checked) {\n      await addSong({ trackName, previewUrl, trackId });\n    } else {\n      await removeSong({ trackName, previewUrl, trackId });\n      removeFromFavorites(trackId);\n    }\n    if (this.isMount) {\n      this.setState({ addSongIsLoading: false });\n    }\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { favoriteSong, addSongIsLoading } = this.state;\n    return (\n      <div>\n        {addSongIsLoading\n          ? <LoadingMessage />\n          : (\n            <div>\n              <h3>{trackName}</h3>\n              <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                <code>audio</code>\n                .\n              </audio>\n              <label htmlFor={ `checkbox-music-${trackId}` }>\n                Favorita\n                <input\n                  type=\"checkbox\"\n                  id={ `checkbox-music-${trackId}` }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  checked={ favoriteSong }\n                  onChange={ this.checkFavoriteSong }\n                />\n              </label>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  removeFromFavorites: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport AlbumCard from '../components/AlbumCard';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      songsList: [],\n      artistName: '',\n      collectionName: '',\n      artworkUrl100: '',\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    getMusics(id).then((response) => {\n      this.setState({\n        songsList: response.filter(({ kind }) => kind === 'song'),\n        artistName: response[0].artistName,\n        collectionName: response[0].collectionName,\n        artworkUrl100: response[0].artworkUrl100,\n      });\n    });\n  }\n\n  render() {\n    const { songsList, ...albumData } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <AlbumCard { ...albumData } />\n        {\n          songsList.map(({ trackId, ...songData }) => (\n            <MusicCard\n              key={ trackId }\n              { ...songData }\n              trackId={ trackId }\n              removeFromFavorites={ () => {} }\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport LoadingMessage from '../components/LoadingMessage';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  isMount = false\n\n  constructor() {\n    super();\n    this.state = {\n      favoriteSongsList: [],\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    this.setState({ isLoading: true });\n    getFavoriteSongs().then((songsList) => {\n      if (this.isMount) {\n        this.setState({ favoriteSongsList: songsList, isLoading: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  removeFromFavorites = (trackId) => {\n    this.setState(({ favoriteSongsList }) => {\n      const newList = favoriteSongsList.filter((song) => song.trackId !== trackId);\n      return { favoriteSongsList: newList };\n    });\n  }\n\n  render() {\n    const { favoriteSongsList, isLoading } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        { isLoading\n          ? <LoadingMessage />\n          : (\n            favoriteSongsList.map(({ trackId, ...songData }) => (\n              <MusicCard\n                { ...songData }\n                key={ trackId }\n                trackId={ parseInt(trackId, 10) }\n                removeFromFavorites={ this.removeFromFavorites }\n              />\n            ))\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { basePath } from '../App';\nimport Header from '../components/Header';\nimport LoadingMessage from '../components/LoadingMessage';\nimport { getUser } from '../services/userAPI';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(({ name, email, image, description }) => {\n      this.setState(\n        { userName: name, email, image, description, isLoading: false },\n      );\n    });\n  }\n\n  render() {\n    const { isLoading, userName, email, image, description } = this.state;\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {isLoading\n          ? <LoadingMessage />\n          : (\n            <div>\n              <img data-testid=\"profile-image\" src={ image } alt=\"Imagem do usuário\" />\n              <h2>{ userName }</h2>\n              <p>{ email }</p>\n              <p>{ description }</p>\n              <Link to={`${ basePath }/profile/edit`}>Editar perfil</Link>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { basePath } from '../App';\nimport Header from '../components/Header';\nimport LoadingMessage from '../components/LoadingMessage';\nimport { getUser, updateUser } from '../services/userAPI';\n\nclass ProfileEdit extends React.Component {\n  isMount = false;\n\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      editFinished: false,\n      userName: '',\n      email: '',\n      image: '',\n      description: '',\n    };\n  }\n\n  componentDidMount() {\n    this.isMount = true;\n    getUser().then(({ name, email, image, description }) => {\n      this.setState(\n        { userName: name, email, image, description, isLoading: false },\n      );\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMount = false;\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleClick = () => {\n    const { userName, email, image, description } = this.state;\n    this.setState({ isLoading: true });\n    updateUser({ name: userName, email, image, description })\n      .then(() => {\n        if (this.isMount) {\n          this.setState({ isLoading: false, editFinished: true });\n        }\n      });\n  }\n\n  validForm = () => {\n    const { userName, email, image, description } = this.state;\n    const regexForEmail = /\\S+@\\S+\\.com/;\n    return userName.trim().length > 0 && image.trim().length > 0\n    && description.trim().length > 0 && regexForEmail.test(email);\n  }\n\n  render() {\n    const { editFinished, isLoading, userName, email, image, description } = this.state;\n    const { ...rest } = this.props;\n    return (\n      <Route { ...rest }>\n        {editFinished\n          ? <Redirect to={`${ basePath }/profile`} />\n          : (\n            <div data-testid=\"page-profile-edit\">\n              <Header />\n              {isLoading\n                ? <LoadingMessage />\n                : (\n                  <div className=\"page-profile\">\n                    <form className=\"form-box\">\n                      <img\n                        data-testid=\"profile-image\"\n                        src={ image }\n                        alt=\"Imagem do usuário\"\n                        className=\"user-image\"\n                      />\n                      <label htmlFor=\"edit-input-name\" className=\"label-box\">\n                        Nome de usuário\n                        <input\n                          type=\"text\"\n                          name=\"userName\"\n                          id=\"edit-input-name\"\n                          data-testid=\"edit-input-name\"\n                          value={ userName }\n                          onChange={ this.handleChange }\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label htmlFor=\"edit-input-email\" className=\"label-box\">\n                        e-mail\n                        <input\n                          type=\"text\"\n                          name=\"email\"\n                          id=\"edit-input-email\"\n                          data-testid=\"edit-input-email\"\n                          value={ email }\n                          onChange={ this.handleChange }\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label htmlFor=\"edit-input-image\" className=\"label-box\">\n                        Url da imagem\n                        <input\n                          type=\"text\"\n                          name=\"image\"\n                          id=\"edit-input-image\"\n                          data-testid=\"edit-input-image\"\n                          value={ image }\n                          onChange={ this.handleChange }\n                          className=\"input-field\"\n                        />\n                      </label>\n                      <label\n                        htmlFor=\"edit-input-description\"\n                        className=\"label-box description\"\n                      >\n                        Descrição\n                        <textarea\n                          name=\"description\"\n                          id=\"edit-input-description\"\n                          data-testid=\"edit-input-description\"\n                          onChange={ this.handleChange }\n                          className=\"input-field\"\n                          value={ description }\n                        />\n                      </label>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-button-save\"\n                        disabled={ !this.validForm() }\n                        className=\"btn\"\n                        onClick={ this.handleClick }\n                      >\n                        Salvar\n                      </button>\n                    </form>\n                  </div>\n                )}\n            </div>\n          )}\n      </Route>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        Not Found\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport './index.css';\n\nexport const basePath = \"/trybetunes\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Login exact path={ basePath } />\n          <Route exact path={`${ basePath }/search`} render={ () => <Search /> } />\n          <Route\n            path={`${ basePath }/album/:id`}\n            render={ ({ match }) => <Album { ...match.params } /> }\n          />\n          <Route exact path={`${ basePath }/favorites`} render={ () => <Favorites /> } />\n          <Route exact path={`${ basePath }/profile`} render={ () => <Profile /> } />\n          <ProfileEdit exact path={`${ basePath }/profile/edit`} />\n          <Route path=\"*\" render={ () => <NotFound /> } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}